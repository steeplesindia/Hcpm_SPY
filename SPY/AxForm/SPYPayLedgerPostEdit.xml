<?xml version="1.0" encoding="utf-8"?>
<AxForm xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="Microsoft.Dynamics.AX.Metadata.V6">
	<Name>SPYPayLedgerPostEdit</Name>
	<SourceCode>
		<Methods xmlns="">
			<Method>
				<Name>classDeclaration</Name>
				<Source><![CDATA[
/* TODO: (Code Upgrade) [Vertical Button Group Rule] Please manually fix the vertical button group [GroupParametersButtonGroup] in this form, it does not conform to any well known rules. The button group does not have any data source or its data source is not part of any root or linked data source query. */
[Form]
public class SPYPayLedgerPostEdit extends FormRun implements IDialogable
{
    SPYPayLedgerPostServiceController       payLedgerPostServiceController;
    Query                                   workerQuery;
    QueryRun                                workerQueryRun;
    Query                                   payElementQuery;
    QueryRun                                payElementQueryRun;
    Query                                   leaveApplQuery;
    QueryRun                                leaveApplQueryRun;
    container                               workerQueryPack,payElementQueryPack,leaveApplQueryPack;
    SPYPayLedgerContract                    contract;
    boolean                                 calledFromMasterProcess,calledFromArrearProcess,calledFromSettlementProcess, calledFromEOS,
                                            calledFromJournal;
}
]]></Source>
			</Method>
			<Method>
				<Name>formRun</Name>
				<Source><![CDATA[
    public FormRun formRun()
    {
        //Required by the SysOperation framework.
        return this;
    }

]]></Source>
			</Method>
			<Method>
				<Name>closedOk</Name>
				<Source><![CDATA[
    public boolean closedOk()
    {
        boolean                                 ret;
        SPYPayLedgerLeaveSettlementContract     settlementContract;
        SPYPayLedgerEOSContract     payLedgerEOSContract;

        ret = super();
    
        if(contract)
        {
            contract.parmPayrollPeriodLine(PayrollPeriod_ReferenceGroup.value());
            contract.parmWorkerQuery(workerQueryPack);
            contract.parmPayElementQuery(payElementQueryPack);
            contract.parmPayrollParameterState(payLedgerPostServiceController.parmPayrollParameterState());
            contract.parmJournalDescription(JourDesc.text());
            if(calledFromSettlementProcess)
            {
                settlementContract = contract;
                settlementContract.parmParameterState(payLedgerPostServiceController.parmLeaveSettlementParameterState());
            }
           else  if(calledFromJournal)
                contract.parmPayrollPeriodLine(payLedgerPostServiceController.parmPayrollParameterState().parmPayrollPeriodLine());
            else if(calledFromEOS)
            {
                payLedgerEOSContract = contract;
                payLedgerEOSContract.parmEOSRunTable(payLedgerPostServiceController.parmEOSRunTable());
            }
        }
    
        return ret;
    }

]]></Source>
			</Method>
			<Method>
				<Name>init</Name>
				<Source><![CDATA[
    public void init()
    {
        super();
        if(element.args().caller() && element.args().caller() is SPYPayLedgerPostServiceController)
        {
            payLedgerPostServiceController = element.args().caller() as SPYPayLedgerPostServiceController;
            if(payLedgerPostServiceController.parmLeaveSettlementParameterState() &&
               payLedgerPostServiceController.parmLeaveSettlementParameterState().parmCalledFromSettlementProcess())
            {
                calledFromSettlementProcess = true;
                if(payLedgerPostServiceController.getDataContractObject() is SPYPayLedgerLeaveSettlementContract)
                    contract = payLedgerPostServiceController.getDataContractObject() as SPYPayLedgerLeaveSettlementContract;
            }
            else
            {
                if(payLedgerPostServiceController.parmPayrollParameterState() &&
                   payLedgerPostServiceController.parmPayrollParameterState().parmCalledFromMasterProcess())
                {
                    calledFromMasterProcess = true;
                }
                if(payLedgerPostServiceController.parmPayrollParameterState() &&
                   payLedgerPostServiceController.parmPayrollParameterState().parmCalledFromJournal())
                {
                    calledFromJournal = true;
                }
                else if(payLedgerPostServiceController.parmPayrollParameterState() &&
                   payLedgerPostServiceController.parmPayrollParameterState().parmCalledFromArrearProcess())
                {
                    calledFromArrearProcess = true;
                    payElementQuery = this.initPayelementApplQuery();
                    payElementQueryRun = new QueryRun(payElementQuery);
                }
                else if(payLedgerPostServiceController.parmCalledFromEOS())
                {
                    calledFromEOS = true;
                    payElementQuery = this.initPayelementApplQuery();
                    payElementQueryRun = new QueryRun(payElementQuery);
                }
                else
                {
                    workerQuery = this.initWorkerApplQuery();
                    workerQueryRun = new QueryRun(workerQuery);
                    payElementQuery = this.initPayelementApplQuery();
                    payElementQueryRun = new QueryRun(payElementQuery);
                }
                if(payLedgerPostServiceController.getDataContractObject() is SPYPayLedgerContract)
                    contract = payLedgerPostServiceController.getDataContractObject() as SPYPayLedgerContract;
            }
        }        
    
        element.setEnable();
        element.initializeValue();
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerApplQuery</Name>
				<Source><![CDATA[
    Query initWorkerApplQuery()
    {
        return new Query(queryStr(SPYHcmWorker_All));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPayelementApplQuery</Name>
				<Source><![CDATA[
    Query initPayelementApplQuery()
    {
        return new Query(queryStr(SPYPayElement));
    }

]]></Source>
			</Method>
			<Method>
				<Name>initializeValue</Name>
				<Source><![CDATA[
    public void initializeValue() //TODO UPGRADE
    {
        //SPYPayLedgerLeaveSettlementContract     settlementContract = contract as SPYPayLedgerContract;
    
        PayrollPeriod_ReferenceGroup.value(contract.parmPayrollPeriodLine());
        workerQueryPack = contract.parmWorkerQuery();
        payElementQueryPack = contract.parmPayElementQuery();/*
        if(calledFromSettlementProcess)
            leaveApplQueryPack = settlementContract.parmLeaveApplQuery();*/
    }

]]></Source>
			</Method>
			<Method>
				<Name>initLeaveApplQuery</Name>
				<Source><![CDATA[
    void  initLeaveApplQuery()
    {
        if(leaveApplQueryRun.prompt())
        {
            leaveApplQueryPack = leaveApplQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initPayElementQuery</Name>
				<Source><![CDATA[
    void  initPayElementQuery()
    {
        if(payElementQueryRun.prompt())
        {
            payElementQueryPack = payElementQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>initWorkerQuery</Name>
				<Source><![CDATA[
    void  initWorkerQuery()
    {
        if(workerQueryRun.prompt())
        {
            workerQueryPack = workerQueryRun.pack();
        }
    }

]]></Source>
			</Method>
			<Method>
				<Name>runBase</Name>
				<Source><![CDATA[
    SPYPayLedgerPostServiceController runBase()
    {//Method must be named runBase() for the integration to the Batch dialog to work.
        return payLedgerPostServiceController;
    }

]]></Source>
			</Method>
			<Method>
				<Name>setEnable</Name>
				<Source><![CDATA[
    public void setEnable()
    {
        ChooseLaveAppl.visible(false);
        if(calledFromMasterProcess)
        {
            ChooseWorker.visible(false);
            ChoosePayElement.visible(false);
        }
        else if(calledFromArrearProcess)
        {
            ChooseWorker.visible(false);
            ChoosePayElement.visible(false);
        }
        else if(calledFromSettlementProcess)
        {
            ChooseWorker.visible(false);
            ChoosePayElement.visible(false);
        }
        else if(calledFromJournal)
        {
            ChooseWorker.visible(false);
            ChoosePayElement.visible(false);
            PayrollPeriod_ReferenceGroup.visible(false);
        }
        else if(calledFromEOS)
        {
            ChooseWorker.visible(false);
            ChoosePayElement.visible(false);
            PayrollPeriod_ReferenceGroup.visible(false);
        }
    }

]]></Source>
			</Method>
		</Methods>
		<DataSources xmlns="" />
		<DataControls xmlns="">
			<Control>
				<Name>ChooseWorker</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initWorkerQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChoosePayElement</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initPayElementQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
			<Control>
				<Name>ChooseLaveAppl</Name>
				<Type>Button</Type>
				<Methods>
					<Method>
						<Name>clicked</Name>
						<Source><![CDATA[
        void  clicked()
        {
            super();
            element.initLeaveApplQuery();
        }

]]></Source>
					</Method>
				</Methods>
			</Control>
		</DataControls>
		<Members xmlns="" />
	</SourceCode>
	<DataSources />
	<Design>
		<Caption xmlns="">@SPY316</Caption>
		<Pattern xmlns="">Dialog</Pattern>
		<PatternVersion xmlns="">1.2</PatternVersion>
		<Style xmlns="">Dialog</Style>
		<Controls xmlns="">
			<AxFormControl xmlns=""
				i:type="AxFormActionPaneControl">
				<Name>FormActionPaneControl1</Name>
				<Type>ActionPane</Type>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormButtonGroupControl">
						<Name>GroupParametersButtonGroup</Name>
						<ElementPosition>1610612734</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Type>ButtonGroup</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChooseWorker</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1073741822</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1426</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChoosePayElement</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1610612733</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1427</Text>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormButtonControl">
								<Name>ChooseLaveAppl</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1879048189</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<HeightMode>Auto</HeightMode>
								<HelpText>@SYS85423</HelpText>
								<Skip>Yes</Skip>
								<Type>Button</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<WidthMode>Auto</WidthMode>
								<FormControlExtension
									i:nil="true" />
								<Text>@SPY1584</Text>
							</AxFormControl>
						</Controls>
						<ArrangeMethod>Vertical</ArrangeMethod>
					</AxFormControl>
				</Controls>
				<Style>Strip</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormGroupControl">
				<Name>Group_</Name>
				<ElementPosition>805306366</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<HeightMode>SizeToAvailable</HeightMode>
				<Pattern>FieldsFieldGroups</Pattern>
				<PatternVersion>1.1</PatternVersion>
				<Type>Group</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormGroupControl">
						<Name>GroupParameter</Name>
						<ElementPosition>1073741822</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<Type>Group</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<FormControlExtension
							i:nil="true" />
						<Controls>
							<AxFormControl xmlns=""
								i:type="AxFormReferenceGroupControl">
								<Name>PayrollPeriod_ReferenceGroup</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1431655764</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>ReferenceGroup</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<Controls />
								<ExtendedDataType>SPYPayrollPeriodLineRecId</ExtendedDataType>
							</AxFormControl>
							<AxFormControl xmlns=""
								i:type="AxFormStringControl">
								<Name>JourDesc</Name>
								<AutoDeclaration>Yes</AutoDeclaration>
								<ElementPosition>1789569705</ElementPosition>
								<FilterExpression>%1</FilterExpression>
								<Type>String</Type>
								<VerticalSpacing>-1</VerticalSpacing>
								<FormControlExtension
									i:nil="true" />
								<ExtendedDataType>Description</ExtendedDataType>
								<Label>@SPY1116</Label>
							</AxFormControl>
						</Controls>
					</AxFormControl>
				</Controls>
				<ColumnsMode>Fill</ColumnsMode>
				<Style>DialogContent</Style>
			</AxFormControl>
			<AxFormControl xmlns=""
				i:type="AxFormButtonGroupControl">
				<Name>ButtonGroup</Name>
				<ElementPosition>1610612733</ElementPosition>
				<FilterExpression>%1</FilterExpression>
				<LeftMode>AutoRight</LeftMode>
				<TopMode>BottomEdge</TopMode>
				<Type>ButtonGroup</Type>
				<VerticalSpacing>-1</VerticalSpacing>
				<WidthMode>SizeToAvailable</WidthMode>
				<FormControlExtension
					i:nil="true" />
				<Controls>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>OK</Name>
						<ElementPosition>858993458</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>OK</Command>
						<DefaultButton>Yes</DefaultButton>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormMenuFunctionButtonControl">
						<Name>ButtonBatch</Name>
						<AutoDeclaration>Yes</AutoDeclaration>
						<ElementPosition>1717986916</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>MenuFunctionButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<MenuItemName>BatchDialog</MenuItemName>
						<MenuItemType>Action</MenuItemType>
					</AxFormControl>
					<AxFormControl xmlns=""
						i:type="AxFormCommandButtonControl">
						<Name>Cancel</Name>
						<ElementPosition>1288490187</ElementPosition>
						<FilterExpression>%1</FilterExpression>
						<HeightMode>Auto</HeightMode>
						<Skip>Yes</Skip>
						<Type>CommandButton</Type>
						<VerticalSpacing>-1</VerticalSpacing>
						<WidthMode>Auto</WidthMode>
						<FormControlExtension
							i:nil="true" />
						<Command>Cancel</Command>
					</AxFormControl>
				</Controls>
				<ArrangeMethod>HorizontalRight</ArrangeMethod>
				<Style>DialogCommitContainer</Style>
			</AxFormControl>
		</Controls>
	</Design>
	<Parts />
</AxForm>